const express = require("express");
const router = express.Router();
const auth = require("../middlewares/auth");
const { check } = require("express-validator");
const { registerUser } = require('../service/registerUser');
const { updatePassword } = require('../service/updatePassword');
const { updateUser } = require('../service/updateUser');
const { getLoggedInUser } = require('../service/getLoggedInUser');
const { getUserById } = require('../service/getUserById');
const { getUsers } = require('../service/getUsers');
const { getUserByIdParams } = require('../service/getUserByIdParams');
const { loginUser } = require('../service/loginUser');
const { deleteUser } = require("../service/deleteUser");
const { requestForgetPassword } = require("../service/requestForgetPassword");
const { verifyCode } = require("../service/verifyCode");
const { getNewEmpCode } = require("../service/getNewEmpCode");
const { checkRole } = require("../middlewares/checkRole");


// @route   POST /users
// @desc    Register user
// @access  Public
router.post(
    "/",
    [
        check("username", "Please include a username").exists(),
        // check("email", "Please include a valid email").isEmail(),
        check("password", "Please enter password with 6 or more characters").isLength({ min: 6 }),
    ],
    auth,
    checkRole(["admin"]),
    registerUser
);

// @route   POST /users
// @desc    Update Password user
// @access  Private
router.patch(
    "/",
    [
        check("password", "Please enter password with 6 or more characters").isLength({ min: 6 }),
    ],
    updatePassword
);

// @route   Update /User
// @desc    Get user by id
// @access  Private
router.patch('/:id', auth, checkRole(["admin","manager"]), updateUser);

// @route   GET /users/auth
// @desc    Get user by token/ Loading user
// @access  Private
router.get("/auth", auth, checkRole(["admin","manager","user"]), getLoggedInUser);

router.get("/authid", auth, checkRole(["admin","manager","user"]), getUserById);

// @route   GET /All user
// @desc    Get all
// @access  Private
router.get("/auth/alluser", auth, checkRole(["admin","manager"]), getUsers);

// @route   GET /employee code
// @desc    Get new autogenerated employee code
// @access  Private
router.get("/auth/employee-code", auth, checkRole(["admin","manager"]), getNewEmpCode);

router.get("/auth/:id", auth, checkRole(["admin","manager","user"]), getUserByIdParams);
// @route   POST /users/auth
// @desc    Authentication user & get token/ Login user
// @access  Public
router.post(
    "/auth",
    [
        check("username", "Please include a username").exists(),
        // check("email", "Please include a valid email").isEmail(),
        check("password", "Password is required").exists(),
    ],
    loginUser
);
router.delete('/auth/:id', auth, checkRole(["admin","manager"]), deleteUser);

// // @route   POST /user/request-forget-password
// // @desc    Request for forget password
// // @access  Public
// router.post(
//     "/auth/request-forget-password",
//     [
//         check("email", "Please include a valid email").isEmail()
//     ],
//     requestForgetPassword
// );

// // @route   POST /users/verify-code
// // @desc    Authentication user & get token/ Login user
// // @access  Public
// router.post(
//     "/auth/verify-code",
//     [
//         check("email", "Please include a valid email").isEmail(),
//         check("code", "Code is required").exists(),
//         check("password", "Please enter password with 6 or more characters").isLength({ min: 6 }),
//     ],
//     verifyCode
// );

module.exports = router;
